{"id":"node_modules/core-js/modules/es.typed-array.at.js","dependencies":[{"name":"D:\\onami web\\package.json","includedInParent":true,"mtime":1634391636719},{"name":"D:\\onami web\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1634309668808},{"name":"../internals/array-buffer-view-core","loc":{"line":2,"column":34},"parent":"D:\\onami web\\node_modules\\core-js\\modules\\es.typed-array.at.js","resolved":"D:\\onami web\\node_modules\\core-js\\internals\\array-buffer-view-core.js"},{"name":"../internals/to-length","loc":{"line":3,"column":23},"parent":"D:\\onami web\\node_modules\\core-js\\modules\\es.typed-array.at.js","resolved":"D:\\onami web\\node_modules\\core-js\\internals\\to-length.js"},{"name":"../internals/to-integer","loc":{"line":4,"column":24},"parent":"D:\\onami web\\node_modules\\core-js\\modules\\es.typed-array.at.js","resolved":"D:\\onami web\\node_modules\\core-js\\internals\\to-integer.js"}],"generated":{"js":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = toLength(O.length);\n  var relativeIndex = toInteger(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.typed-array.at.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"node_modules/core-js/modules/es.typed-array.at.js":"'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = toLength(O.length);\n  var relativeIndex = toInteger(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n"},"lineCount":18}},"error":null,"hash":"90d751d273e1fe3f86bc65a0ea067105","cacheData":{"env":{}}}